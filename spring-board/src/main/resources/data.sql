DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS POST;
DROP TABLE IF EXISTS MEMBER;

CREATE TABLE MEMBER
(
    ID            BIGINT PRIMARY KEY AUTO_INCREMENT,
    LOGIN_ID      VARCHAR   NOT NULL UNIQUE,
    PASSWORD      VARCHAR   NOT NULL,
    NICKNAME      VARCHAR   NOT NULL UNIQUE,
    REGISTER_DATE TIMESTAMP NOT NULL,
    STATUS        VARCHAR   NOT NULL
);

CREATE TABLE POST
(
    ID            BIGINT PRIMARY KEY AUTO_INCREMENT,
    TITLE         VARCHAR NOT NULL,
    CONTENT       VARCHAR NOT NULL,
    VIEWS         INT     NOT NULL DEFAULT 0,
    REGISTER_DATE TIMESTAMP NOT NULL,
    STATUS        VARCHAR NOT NULL,
    MEMBER_ID     BIGINT  NOT NULL,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);

CREATE TABLE COMMENT
(
    ID            BIGINT PRIMARY KEY AUTO_INCREMENT,
    CONTENT       VARCHAR       NOT NULL,
    SCORE         DECIMAL(2, 1) NOT NULL,
    MEMBER_ID     BIGINT        NOT NULL,
    POST_ID       BIGINT        NOT NULL,
    REGISTER_DATE TIMESTAMP     NOT NULL,
    STATUS        VARCHAR       NOT NULL,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (ID) ON DELETE CASCADE,
    FOREIGN KEY (POST_ID) REFERENCES POST (ID) ON DELETE CASCADE
);

-- INSERT INTO MEMBER (LOGIN_ID, PASSWORD, NICKNAME, STATUS) VALUES ('ABCD', 'ABCD', 'ABCD', 'USING');
-- INSERT INTO POST (TITLE, CONTENT, STATUS, MEMBER_ID) VALUES ('ABCDEFG', 'ABDEFG', 'USING', '1');
-- INSERT INTO COMMENT (CONTENT, SCORE, MEMBER_ID, POST_ID, STATUS) VALUES ('ABDCDE', 4.5, '1', '1', 'USING');

-- ID            BIGINT PRIMARY KEY AUTO_INCREMENT,
--     LOGIN_ID      VARCHAR   NOT NULL UNIQUE,
--     PASSWORD      VARCHAR   NOT NULL,
--     NICKNAME      VARCHAR   NOT NULL UNIQUE,
--     REGISTER_DATE TIMESTAMP NOT NULL,
--     STATUS        VARCHAR   NOT NULL